// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  DISPONIVEL   @map("Disponivel")
  INDISPONIVEL @map("Indisponivel")
  EM_PROCESSO  @map("Em Processo")
}

model Candidate {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String   @db.VarChar(250)
  email      String   @unique @db.VarChar(200)
  phone      String   @db.VarChar(20)
  experience String   @db.VarChar(250)
  status     Status
  education  String   @db.VarChar(250)
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  skills     Skill[]  @relation("CandidateSkills")

}

model Skill {
  id   String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name String @db.VarChar(250)

  candidateId String    @db.Uuid
  candidate   Candidate @relation("CandidateSkills", fields: [candidateId], references: [id], onDelete: Cascade)

}

model Manager {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email     String   @unique @db.VarChar(250)
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

}
